generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

// -----------------------------
// Authorization/Authentication
// (Necessary for Next auth)
// -----------------------------
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
    @@index([userId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@index([userId])
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

enum Role {
    USER
    ADMIN
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    role          Role      @default(USER)

    race       Race?
    profession Profession?

    hp_actual   Int?
    hp_max      Int?
    mana_actual Int?
    mana_max    Int?
    xp_actual   Int?
    xp_max      Int?

    money Int @default(0)

    level        Int @default(1)
    damage_min   Int @default(0)
    damage_max   Int @default(0)
    strength     Int @default(0)
    agility      Int @default(0)
    intelligence Int @default(0)

    pos_x Int @default(0)
    pos_y Int @default(0)

    enemy_instance    EnemyInstance? @relation(fields: [enemy_instance_id], references: [id])
    enemy_instance_id String?

    loot    Loot?   @relation(fields: [loot_id], references: [id])
    loot_id String?

    inventory    Inventory? @relation(fields: [inventory_id], references: [id])
    inventory_id String?

    wearable    Wearable? @relation(fields: [wearable_id], references: [id])
    wearable_id String?

    user_quest    UserQuest? @relation(fields: [user_quest_id], references: [id])
    user_quest_id Int?

    defeated Boolean @default(false)

    bank_accounts BankAccount[]

    @@index([loot_id])
    @@index([inventory_id])
    @@index([wearable_id])
    @@index([user_quest_id])
    @@index([enemy_instance_id])
}

enum Race {
    HUMAN
    DWARF
    GNOME
}

enum Profession {
    WARRIOR
    SAMURAI
    MAGE
}

model UserQuest {
    id Int @id @default(autoincrement())

    quest_slain_enemy QuestSlainEnemy? @relation(fields: [quest_slain_enemy_id], references: [id])
    quest_slain_troll QuestSlainTroll? @relation(fields: [quest_slain_troll_id], references: [id])

    quest_slain_enemy_id Int?
    quest_slain_troll_id Int?

    quest_slain_enemy_complete Boolean @default(false)
    quest_slain_troll_complete Boolean @default(false)

    quest_slain_enemy_done Boolean @default(false)
    quest_slain_troll_done Boolean @default(false)

    User User[]

    @@index([quest_slain_enemy_id])
    @@index([quest_slain_troll_id])
}

// -----------------------------
// Enemy
// -----------------------------
model Enemy {
    id   String @id @default(uuid())
    name String

    hp_from Int
    hp_to   Int

    damage_from Int
    damage_to   Int

    xp_from Int?
    xp_to   Int?

    money_from Int?
    money_to   Int?

    enemy_instances EnemyInstance[]
    slain           Slain[]
}

model EnemyInstance {
    id String @id @default(cuid())

    hp_actual Int
    hp_max    Int

    enemy    Enemy  @relation(fields: [enemy_id], references: [id])
    enemy_id String

    users User[]

    @@index([enemy_id])
}

// -----------------------------
// Place
// -----------------------------
model Place {
    id          String  @id @default(uuid())
    name        String
    description String?

    pos_x Int
    pos_y Int

    hospital    Hospital? @relation(fields: [hospital_id], references: [id])
    hospital_id String?
    armory      Armory?   @relation(fields: [armory_id], references: [id])
    armory_id   String?
    bank        Bank?     @relation(fields: [bank_id], references: [id])
    bank_id     String?

    @@index([hospital_id])
    @@index([armory_id])
    @@index([bank_id])
}

// -----------------------------
// Hospital
// -----------------------------
model Hospital {
    id             String  @id @default(uuid())
    name           String
    description    String?
    subdescription String?

    price Int?

    places           Place[]
    potions_hospital PotionInHospital[]
}

model PotionInHospital {
    id String @id @default(uuid())

    price Int

    potion      Potion   @relation(fields: [potion_id], references: [id])
    potion_id   Int
    hospital    Hospital @relation(fields: [hospital_id], references: [id])
    hospital_id String

    @@index([potion_id])
    @@index([hospital_id])
}

// -----------------------------
// Armory
// -----------------------------
model Armory {
    id             String  @id @default(uuid())
    name           String
    description    String?
    subdescription String?

    weapons WeaponInArmory[]
    armors  ArmorInArmory[]
    places  Place[]
}

model WeaponInArmory {
    id String @id @default(uuid())

    weapon    Weapon  @relation(fields: [weapon_id], references: [id])
    weapon_id String
    armory    Armory? @relation(fields: [armory_id], references: [id])
    armory_id String?

    price Int

    @@index([weapon_id])
    @@index([armory_id])
}

model ArmorInArmory {
    id String @id @default(uuid())

    armor     Armor   @relation(fields: [armor_id], references: [id])
    armor_id  String
    armory    Armory? @relation(fields: [armory_id], references: [id])
    armory_id String?

    price Int

    @@index([armor_id])
    @@index([armory_id])
}

// -----------------------------
// Bank
// -----------------------------
model Bank {
    id             String  @id @default(uuid())
    name           String
    description    String?
    subdescription String?

    accounts BankAccount[]
    places   Place[]
}

model BankAccount {
    id String @id @default(uuid())

    bank    Bank   @relation(fields: [bank_id], references: [id])
    bank_id String
    user    User   @relation(fields: [user_id], references: [id])
    user_id String

    money Int @default(0)

    weapons WeaponInBank[]
    armors  ArmorInBank[]
    potions PotionInBank[]

    @@index([bank_id])
    @@index([user_id])
}

model WeaponInBank {
    id String @id @default(uuid())

    weapon          Weapon      @relation(fields: [weapon_id], references: [id])
    weapon_id       String
    bank_account    BankAccount @relation(fields: [bank_account_id], references: [id])
    bank_account_id String

    @@index([weapon_id])
    @@index([bank_account_id])
}

model ArmorInBank {
    id String @id @default(uuid())

    armor           Armor       @relation(fields: [armor_id], references: [id])
    armor_id        String
    bank_acount     BankAccount @relation(fields: [bank_account_id], references: [id])
    bank_account_id String

    @@index([armor_id])
    @@index([bank_account_id])
}

model PotionInBank {
    id String @id @default(uuid())

    potion          Potion      @relation(fields: [potion_id], references: [id])
    potion_id       Int
    bank_acount     BankAccount @relation(fields: [bank_account_id], references: [id])
    bank_account_id String

    @@index([potion_id])
    @@index([bank_account_id])
}

// -----------------------------
// Wearables
// -----------------------------

model Wearable {
    id String @id @default(uuid())

    users User[]

    left_hand  WeaponInInventory? @relation("LeftHandWeapon", fields: [left_hand_weapon_id], references: [id])
    right_hand WeaponInInventory? @relation("RightHandWeapon", fields: [right_hand_weapon_id], references: [id])

    head     ArmorInInventory? @relation("HeadArmor", fields: [head_armor_id], references: [id])
    shoulder ArmorInInventory? @relation("ShoulderArmor", fields: [shoulder_armor_id], references: [id])
    chest    ArmorInInventory? @relation("ChestArmor", fields: [chest_armor_id], references: [id])
    hand     ArmorInInventory? @relation("HandArmor", fields: [hand_armor_id], references: [id])
    pants    ArmorInInventory? @relation("PantsArmor", fields: [pants_armor_id], references: [id])
    boots    ArmorInInventory? @relation("BootsArmor", fields: [boots_armor_id], references: [id])

    left_hand_weapon_id  String?
    right_hand_weapon_id String?

    head_armor_id     String?
    shoulder_armor_id String?
    chest_armor_id    String?
    hand_armor_id     String?
    pants_armor_id    String?
    boots_armor_id    String?

    @@index([left_hand_weapon_id])
    @@index([right_hand_weapon_id])
    @@index([head_armor_id])
    @@index([shoulder_armor_id])
    @@index([chest_armor_id])
    @@index([hand_armor_id])
    @@index([pants_armor_id])
    @@index([boots_armor_id])
}

model Weapon {
    id   String @id @default(uuid())
    name String

    damage_from Int
    damage_to   Int

    weapons_loot      WeaponInLoot[]
    weapons_armory    WeaponInArmory[]
    weapons_inventory WeaponInInventory[]
    weapons_bank      WeaponInBank[]
}

enum ArmorType {
    HEAD
    SHOULDER
    CHEST
    HAND
    PANTS
    BOOTS
}

model Armor {
    id   String @id @default(uuid())
    name String

    type ArmorType

    armor        Int
    strength     Int
    agility      Int
    intelligency Int

    armors_loot      ArmorInLoot[]
    armors_armory    ArmorInArmory[]
    armors_inventory ArmorInInventory[]
    armors_bank      ArmorInBank[]
}

// -----------------------------
// Consumable
// -----------------------------
model Potion {
    id   Int     @id @default(autoincrement())
    name String?

    hp_gain Int

    potions_bank      PotionInBank[]
    potions_hospital  PotionInHospital[]
    potions_inventory PotionInInventory[]
}

// -----------------------------
// Loot
// -----------------------------

model Loot {
    id String @id @default(uuid())

    user User[]

    weapons_loot WeaponInLoot[]
    armors_loot  ArmorInLoot[]

    money Int
}

model WeaponInLoot {
    id Int @id @default(autoincrement())

    weapon    Weapon @relation(fields: [weapon_id], references: [id])
    weapon_id String
    loot      Loot   @relation(fields: [loot_id], references: [id])
    loot_id   String

    @@index([loot_id])
    @@index([weapon_id])
}

model ArmorInLoot {
    id Int @id @default(autoincrement())

    armor    Armor  @relation(fields: [armor_id], references: [id])
    armor_id String
    loot     Loot   @relation(fields: [loot_id], references: [id])
    loot_id  String

    @@index([armor_id])
    @@index([loot_id])
}

// -----------------------------
// Inventory
// -----------------------------
model Inventory {
    id String @id @default(uuid())

    user User[]

    weapons_inventory WeaponInInventory[]
    armors_inventory  ArmorInInventory[]
    potions_inventory PotionInInventory[]
}

model WeaponInInventory {
    id String @id @default(uuid())

    weapon       Weapon    @relation(fields: [weapon_id], references: [id])
    weapon_id    String
    inventory    Inventory @relation(fields: [inventory_id], references: [id])
    inventory_id String

    left_hand_weapons  Wearable[] @relation("LeftHandWeapon")
    right_hand_weapons Wearable[] @relation("RightHandWeapon")

    @@index([weapon_id])
    @@index([inventory_id])
}

model ArmorInInventory {
    id String @id @default(uuid())

    armor        Armor     @relation(fields: [armor_id], references: [id])
    armor_id     String
    inventory    Inventory @relation(fields: [inventory_id], references: [id])
    inventory_id String

    head_armors     Wearable[] @relation("HeadArmor")
    shoulder_armors Wearable[] @relation("ShoulderArmor")
    chest_armors    Wearable[] @relation("ChestArmor")
    hand_armors     Wearable[] @relation("HandArmor")
    pants_armors    Wearable[] @relation("PantsArmor")
    boots_armors    Wearable[] @relation("BootsArmor")

    @@index([armor_id])
    @@index([inventory_id])
}

model PotionInInventory {
    id String @id @default(uuid())

    potion       Potion    @relation(fields: [potion_id], references: [id])
    potion_id    Int
    inventory    Inventory @relation(fields: [inventory_id], references: [id])
    inventory_id String

    @@index([potion_id])
    @@index([inventory_id])
}

// -----------------------------
// Quest
// -----------------------------

enum QuestIdent {
    SLAIN_ENEMY
    SLAIN_TROLL
}

model Quest {
    id    Int        @id @default(autoincrement())
    ident QuestIdent @unique

    money Int?

    quest_slain_enemy QuestSlainEnemy[]
    quest_slain_troll QuestSlainTroll[]
}

model Slain {
    id Int @id @default(autoincrement())

    enemy         Enemy? @relation(fields: [enemy_id], references: [id])
    actual_slain  Int    @default(0)
    desired_slain Int

    enemy_id String?

    quest_slain_enemy QuestSlainEnemy[]
    quest_slain_troll QuestSlainTroll[]

    @@index([enemy_id])
}

model QuestSlainEnemy {
    id    Int        @id @default(autoincrement())
    ident QuestIdent @default(SLAIN_ENEMY)

    quest Quest @relation(fields: [quest_id], references: [id])
    slain Slain @relation(fields: [slain_id], references: [id])

    quest_id Int
    slain_id Int

    user_quest UserQuest[]

    @@index([quest_id])
    @@index([slain_id])
}

model QuestSlainTroll {
    id    Int        @id @default(autoincrement())
    ident QuestIdent @default(SLAIN_TROLL)

    quest Quest @relation(fields: [quest_id], references: [id])
    slain Slain @relation(fields: [slain_id], references: [id])

    quest_id Int
    slain_id Int

    user_quest UserQuest[]

    @@index([quest_id])
    @@index([slain_id])
}
