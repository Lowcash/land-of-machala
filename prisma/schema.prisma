generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
    @@index([userId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@index([userId])
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]

    race       Race?
    profession Profession?

    hp_actual   Int?
    hp_max      Int?
    mana_actual Int?
    mana_max    Int?
    xp_actual   Int?
    xp_max      Int?

    money Int @default(0)

    level        Int @default(1)
    damage_min   Int @default(0)
    damage_max   Int @default(0)
    strength     Int @default(0)
    agility      Int @default(0)
    intelligence Int @default(0)

    pos_x Int @default(0)
    pos_y Int @default(0)

    enemy_instance    EnemyInstance? @relation(fields: [enemy_instance_id], references: [id])
    enemy_instance_id String?

    loot    Loot?   @relation(fields: [loot_id], references: [id])
    loot_id String?

    inventory    Inventory? @relation(fields: [inventory_id], references: [id])
    inventory_id String?

    wearable    Wearable? @relation(fields: [wearable_id], references: [id])
    wearable_id String?

    @@index([loot_id])
    @@index([inventory_id])
    @@index([wearable_id])
    @@index([enemy_instance_id])
}

enum Race {
    HUMAN
    DWARF
    GNOME
}

enum Profession {
    WARRIOR
    SAMURAI
    MAGE
}

enum Role {
    USER
    ADMIN
}

model EnemyInstance {
    id String @id @default(cuid())

    hp_actual Int
    hp_max    Int

    enemy    Enemy  @relation(fields: [enemy_id], references: [id])
    enemy_id String

    users User[]

    @@index([enemy_id])
}

model Enemy {
    id   String @id @default(uuid())
    name String

    hp_from Int
    hp_to   Int

    damage_from Int
    damage_to   Int

    enemy_instances EnemyInstance[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Place {
    id   String @id @default(uuid())
    name String

    pos_x Int
    pos_y Int
}

model Weapon {
    id   String @id @default(uuid())
    name String

    damage_from Int
    damage_to   Int

    weapon_loot      WeaponInLoot[]
    weapon_inventory WeaponInInventory[]

    left_hand  Wearable[] @relation("LeftHandWeapon")
    right_hand Wearable[] @relation("RightHandWeapon")
}

model Armor {
    id   String @id @default(uuid())
    name String

    type ArmorType

    armor        Int
    strength     Int
    agility      Int
    intelligency Int

    armor_loot      ArmorInLoot[]
    armor_inventory ArmorInInventory[]

    head     Wearable[] @relation("HeadArmor")
    shoulder Wearable[] @relation("ShoulderArmor")
    chest    Wearable[] @relation("ChestArmor")
    hand     Wearable[] @relation("HandArmor")
    pants    Wearable[] @relation("PantsArmor")
    boots    Wearable[] @relation("BootsArmor")
}

enum ArmorType {
    HEAD
    SHOULDER
    CHEST
    HAND
    PANTS
    BOOTS
}

model Wearable {
    id String @id @default(uuid())

    user User[]

    left_hand  Weapon? @relation("LeftHandWeapon", fields: [left_hand_weapon_id], references: [id])
    right_hand Weapon? @relation("RightHandWeapon", fields: [right_hand_weapon_id], references: [id])

    head     Armor? @relation("HeadArmor", fields: [head_armor_id], references: [id])
    shoulder Armor? @relation("ShoulderArmor", fields: [shoulder_armor_id], references: [id])
    chest    Armor? @relation("ChestArmor", fields: [chest_armor_id], references: [id])
    hand     Armor? @relation("HandArmor", fields: [hand_armor_id], references: [id])
    pants    Armor? @relation("PantsArmor", fields: [pants_armor_id], references: [id])
    boots    Armor? @relation("BootsArmor", fields: [boots_armor_id], references: [id])

    left_hand_weapon_id  String?
    right_hand_weapon_id String?

    head_armor_id     String?
    shoulder_armor_id String?
    chest_armor_id    String?
    hand_armor_id     String?
    pants_armor_id    String?
    boots_armor_id    String?

    @@index([left_hand_weapon_id])
    @@index([right_hand_weapon_id])
    @@index([head_armor_id])
    @@index([shoulder_armor_id])
    @@index([chest_armor_id])
    @@index([hand_armor_id])
    @@index([pants_armor_id])
    @@index([boots_armor_id])
}

model Loot {
    id String @id @default(uuid())

    User User[]

    weapons WeaponInLoot[]
    armors  ArmorInLoot[]
}

model WeaponInLoot {
    id Int @id @default(autoincrement())

    weapon    Weapon @relation(fields: [weapon_id], references: [id])
    weapon_id String
    loot      Loot   @relation(fields: [loot_id], references: [id])
    loot_id   String

    @@index([loot_id])
    @@index([weapon_id])
}

model ArmorInLoot {
    id Int @id @default(autoincrement())

    armor    Armor  @relation(fields: [armor_id], references: [id])
    armor_id String
    loot     Loot   @relation(fields: [loot_id], references: [id])
    loot_id  String

    @@index([armor_id])
    @@index([loot_id])
}

model Inventory {
    id String @id @default(uuid())

    User User[]

    weapons WeaponInInventory[]
    armors  ArmorInInventory[]
}

model WeaponInInventory {
    id String @id @default(uuid())

    weapon       Weapon    @relation(fields: [weapon_id], references: [id])
    weapon_id    String
    inventory    Inventory @relation(fields: [inventory_id], references: [id])
    inventory_id String

    @@index([weapon_id])
    @@index([inventory_id])
}

model ArmorInInventory {
    id String @id @default(uuid())

    armor        Armor     @relation(fields: [armor_id], references: [id])
    armor_id     String
    inventory    Inventory @relation(fields: [inventory_id], references: [id])
    inventory_id String

    @@index([armor_id])
    @@index([inventory_id])
}
